<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MauiAppKSMArt.UploadBlobToAzure"
             xmlns:local="clr-namespace:MauiAppKSMArt.ViewsModels"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             Title="Upload To Azure" BackgroundColor="WhiteSmoke">

    <ContentPage.BindingContext>
        <local:UploadBlobToAzureViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        
        <ResourceDictionary>
            <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        </ResourceDictionary>
        
        <Style x:Key="InvalidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Red" />
        </Style>
        
        <Style x:Key="ValidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Black" />
        </Style>
        
    </ContentPage.Resources>

    <VerticalStackLayout HorizontalOptions="Center" BackgroundColor="WhiteSmoke" >

        <Label 
             Text="Art Entries" TextColor="LightBlue" FontSize="Header" FontAttributes="Bold"
             VerticalOptions="Center" 
             HorizontalOptions="Center" />
                
        <HorizontalStackLayout>
            <Label  WidthRequest="80" Text="Email" FontSize="Medium" Margin="5,0,5,0" TextColor="Blue" Opacity=".7" />
            
            <Entry WidthRequest="300"   Margin="0,0,10,5" IsSpellCheckEnabled="False"
                        IsEnabled="{Binding AlertButtonVisible, Converter={StaticResource InvertedBoolConverter}}"
                        FontSize="Body"  BackgroundColor="White" Text="{Binding MyUserName, Mode=TwoWay}"  >
                <Entry.Behaviors>
                    <toolkit:EmailValidationBehavior 
                             InvalidStyle="{StaticResource InvalidEntryStyle}"
                             ValidStyle="{StaticResource ValidEntryStyle}"
                             Flags="ValidateOnValueChanged" />
                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateAllFields}"/>
                </Entry.Behaviors>
            </Entry>
        </HorizontalStackLayout>

        <HorizontalStackLayout>
            <Label WidthRequest="80" Text="Title" FontSize="Medium" Margin="5,0,5,0" TextColor="Blue" Opacity=".7" />

            <Entry Margin="0,0,10,5" WidthRequest="300"  BackgroundColor="White" Text="{Binding MyTitle, Mode=TwoWay}" 
                   IsEnabled="{Binding AlertButtonVisible, Converter={StaticResource InvertedBoolConverter}}" >
                <Entry.Behaviors>
                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateAllFields}" />
                </Entry.Behaviors>
            </Entry>
        </HorizontalStackLayout>

        <HorizontalStackLayout>
            <Label WidthRequest="80" Text="Price" FontSize="Medium" Margin="5,0,5,0" TextColor="Blue" Opacity=".7"/>

            <Entry  Margin="0,0,10,5" BackgroundColor="White" Text="{Binding MyPrice, Mode=TwoWay}" WidthRequest="200"
                    IsEnabled="{Binding AlertButtonVisible, Converter={StaticResource InvertedBoolConverter}}">
                <Entry.Behaviors>
                    <toolkit:NumericValidationBehavior 
                        InvalidStyle="{StaticResource InvalidEntryStyle}"
                        ValidStyle="{StaticResource ValidEntryStyle}"
                        Flags="ValidateOnValueChanged"
                        MinimumValue="0.00"
                        MaximumValue="9000000.00"
                        MaximumDecimalPlaces="2" />
                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateAllFields}" />
                </Entry.Behaviors>
            </Entry>
        </HorizontalStackLayout>

        <FlexLayout Margin="80,10,10,20" >

            <Button x:Name="Btn_PickFiles" Grid.Column="1" Grid.Row="1" Margin="5" HeightRequest="25" WidthRequest="120" TextColor="DarkBlue" BackgroundColor="LightSkyBlue" Opacity=".7"
                Text="Pick Image" SemanticProperties.Hint="Pick Image"
                Command="{Binding PickImagesBlobButtonClick}"
                HorizontalOptions="Fill" IsEnabled="{Binding loadIsEnabled}" >                
            </Button>    
        </FlexLayout>
        <Button x:Name="Message" MinimumHeightRequest="25" MinimumWidthRequest="200"
                Text="{Binding AlertButton}" IsVisible="{Binding AlertButtonVisible}" TextColor="DarkBlue" BackgroundColor="LightSkyBlue" Opacity=".5"
                Command="{Binding ResetForm}" />

    </VerticalStackLayout>
</ContentPage>